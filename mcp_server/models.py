# generated by fastapi-codegen:
#   filename:  openapi.yaml
#   timestamp: 2025-06-28T14:18:27+00:00

from __future__ import annotations

from datetime import datetime
from enum import Enum
from typing import Any, List, Optional

from pydantic import (
    BaseModel,
    ConfigDict,
    Field,
    RootModel,
    SecretStr,
    confloat,
    conint,
    constr,
)


class AccessControlRuleAction(
    RootModel[constr(pattern=r'[a-zA-Z]+', min_length=1, max_length=64)]
):
    root: constr(pattern=r'[a-zA-Z]+', min_length=1, max_length=64)


class AccessControlRuleDescription(
    RootModel[constr(pattern=r'[\u0020-\u00FF]+', min_length=0, max_length=255)]
):
    root: constr(pattern=r'[\u0020-\u00FF]+', min_length=0, max_length=255)


class AccessControlRuleEffect(Enum):
    ALLOW = 'ALLOW'
    DENY = 'DENY'


class AccessControlRuleName(
    RootModel[constr(pattern=r'[a-zA-Z0-9_-]+', min_length=1, max_length=64)]
):
    root: constr(pattern=r'[a-zA-Z0-9_-]+', min_length=1, max_length=64)


class AccessControlRuleNameList(RootModel[List[AccessControlRuleName]]):
    root: List[AccessControlRuleName] = Field(..., max_length=10, min_length=0)


class AccessEffect(Enum):
    ALLOW = 'ALLOW'
    DENY = 'DENY'


class ActionsList(RootModel[List[AccessControlRuleAction]]):
    root: List[AccessControlRuleAction] = Field(..., max_length=10, min_length=0)


class AmazonResourceName(RootModel[constr(min_length=1, max_length=1011)]):
    root: constr(min_length=1, max_length=1011)


class AssociateDelegateToResourceResponse(BaseModel):
    pass


class AssociateMemberToGroupResponse(BaseModel):
    pass


class AvailabilityProviderType(Enum):
    EWS = 'EWS'
    LAMBDA = 'LAMBDA'


class Boolean(RootModel[bool]):
    root: bool


class BooleanObject(RootModel[bool]):
    root: bool


class CancelMailboxExportJobResponse(BaseModel):
    pass


class CreateAliasResponse(BaseModel):
    pass


class CreateAvailabilityConfigurationResponse(BaseModel):
    pass


class DeleteAccessControlRuleResponse(BaseModel):
    pass


class DeleteAliasResponse(BaseModel):
    pass


class DeleteAvailabilityConfigurationResponse(BaseModel):
    pass


class DeleteEmailMonitoringConfigurationResponse(BaseModel):
    pass


class DeleteGroupResponse(BaseModel):
    pass


class DeleteImpersonationRoleResponse(BaseModel):
    pass


class DeleteMailboxPermissionsResponse(BaseModel):
    pass


class DeleteMobileDeviceAccessOverrideResponse(BaseModel):
    pass


class DeleteMobileDeviceAccessRuleResponse(BaseModel):
    pass


class DeleteResourceResponse(BaseModel):
    pass


class DeleteRetentionPolicyResponse(BaseModel):
    pass


class DeleteUserResponse(BaseModel):
    pass


class DeregisterFromWorkMailResponse(BaseModel):
    pass


class DeregisterMailDomainResponse(BaseModel):
    pass


class DescribeInboundDmarcSettingsResponse(BaseModel):
    Enforced: Optional[Boolean] = None


class Description(RootModel[constr(pattern=r'[\S\s]*', min_length=0, max_length=1023)]):
    root: constr(pattern=r'[\S\s]*', min_length=0, max_length=1023)


class DeviceId(RootModel[constr(pattern=r'[A-Za-z0-9]+', min_length=1, max_length=32)]):
    root: constr(pattern=r'[A-Za-z0-9]+', min_length=1, max_length=32)


class DeviceModel(
    RootModel[constr(pattern=r'[\u0020-\u00FF]+', min_length=1, max_length=256)]
):
    root: constr(pattern=r'[\u0020-\u00FF]+', min_length=1, max_length=256)


class DeviceModelList(RootModel[List[DeviceModel]]):
    root: List[DeviceModel] = Field(..., max_length=10, min_length=1)


class DeviceOperatingSystem(
    RootModel[constr(pattern=r'[\u0020-\u00FF]+', min_length=1, max_length=256)]
):
    root: constr(pattern=r'[\u0020-\u00FF]+', min_length=1, max_length=256)


class DeviceOperatingSystemList(RootModel[List[DeviceOperatingSystem]]):
    root: List[DeviceOperatingSystem] = Field(..., max_length=10, min_length=1)


class DeviceType(
    RootModel[constr(pattern=r'[\u0020-\u00FF]+', min_length=1, max_length=256)]
):
    root: constr(pattern=r'[\u0020-\u00FF]+', min_length=1, max_length=256)


class DeviceTypeList(RootModel[List[DeviceType]]):
    root: List[DeviceType] = Field(..., max_length=10, min_length=1)


class DeviceUserAgent(
    RootModel[constr(pattern=r'[\u0020-\u00FF]+', min_length=1, max_length=256)]
):
    root: constr(pattern=r'[\u0020-\u00FF]+', min_length=1, max_length=256)


class DeviceUserAgentList(RootModel[List[DeviceUserAgent]]):
    root: List[DeviceUserAgent] = Field(..., max_length=10, min_length=1)


class DirectoryId(
    RootModel[constr(pattern=r'^d-[0-9a-f]{10}$', min_length=12, max_length=12)]
):
    root: constr(pattern=r'^d-[0-9a-f]{10}$', min_length=12, max_length=12)


class DirectoryInUseException(RootModel[Any]):
    root: Any


class DirectoryServiceAuthenticationFailedException(RootModel[Any]):
    root: Any


class DirectoryUnavailableException(RootModel[Any]):
    root: Any


class DisassociateDelegateFromResourceResponse(BaseModel):
    pass


class DisassociateMemberFromGroupResponse(BaseModel):
    pass


class DnsRecordVerificationStatus(Enum):
    PENDING = 'PENDING'
    VERIFIED = 'VERIFIED'
    FAILED = 'FAILED'


class DomainName(
    RootModel[
        constr(pattern=r'[a-zA-Z0-9.-]+\.[a-zA-Z-]{2,}', min_length=3, max_length=255)
    ]
):
    root: constr(pattern=r'[a-zA-Z0-9.-]+\.[a-zA-Z-]{2,}', min_length=3, max_length=255)


class EmailAddress(
    RootModel[
        constr(
            pattern=r'[a-zA-Z0-9._%+-]{1,64}@[a-zA-Z0-9.-]+\.[a-zA-Z-]{2,}',
            min_length=1,
            max_length=254,
        )
    ]
):
    root: constr(
        pattern=r'[a-zA-Z0-9._%+-]{1,64}@[a-zA-Z0-9.-]+\.[a-zA-Z-]{2,}',
        min_length=1,
        max_length=254,
    )


class EmailAddressInUseException(RootModel[Any]):
    root: Any


class EntityAlreadyRegisteredException(RootModel[Any]):
    root: Any


class EntityIdentifier(
    RootModel[constr(pattern=r'[a-zA-Z0-9._%+@-]+', min_length=1, max_length=256)]
):
    root: constr(pattern=r'[a-zA-Z0-9._%+@-]+', min_length=1, max_length=256)


class EntityNotFoundException(RootModel[Any]):
    root: Any


class EntityState(Enum):
    ENABLED = 'ENABLED'
    DISABLED = 'DISABLED'
    DELETED = 'DELETED'


class EntityStateException(RootModel[Any]):
    root: Any


class ExpiresIn(RootModel[int]):
    root: int


class ExternalUserName(RootModel[constr(pattern=r'[\u0020-\u00FF]+', max_length=256)]):
    root: constr(pattern=r'[\u0020-\u00FF]+', max_length=256)


class FolderName(Enum):
    INBOX = 'INBOX'
    DELETED_ITEMS = 'DELETED_ITEMS'
    SENT_ITEMS = 'SENT_ITEMS'
    DRAFTS = 'DRAFTS'
    JUNK_EMAIL = 'JUNK_EMAIL'


class GetAccessControlEffectResponse(BaseModel):
    Effect: Optional[AccessControlRuleEffect] = None
    MatchedRules: Optional[AccessControlRuleNameList] = None


class GroupName(
    RootModel[constr(pattern=r'[\u0020-\u00FF]+', min_length=1, max_length=256)]
):
    root: constr(pattern=r'[\u0020-\u00FF]+', min_length=1, max_length=256)


class HostedZoneId(RootModel[constr(pattern=r'[\S\s]*', min_length=1, max_length=32)]):
    root: constr(pattern=r'[\S\s]*', min_length=1, max_length=32)


class IdempotencyClientToken(
    RootModel[constr(pattern=r'[\x21-\x7e]+', min_length=1, max_length=128)]
):
    root: constr(pattern=r'[\x21-\x7e]+', min_length=1, max_length=128)


class ImpersonationRoleDescription(
    RootModel[
        constr(
            pattern=r'[^\x00-\x09\x0B\x0C\x0E-\x1F\x7F\x3C\x3E\x5C]+',
            min_length=1,
            max_length=256,
        )
    ]
):
    root: constr(
        pattern=r'[^\x00-\x09\x0B\x0C\x0E-\x1F\x7F\x3C\x3E\x5C]+',
        min_length=1,
        max_length=256,
    )


class ImpersonationRoleId(
    RootModel[constr(pattern=r'[a-zA-Z0-9_-]+', min_length=1, max_length=64)]
):
    root: constr(pattern=r'[a-zA-Z0-9_-]+', min_length=1, max_length=64)


class ImpersonationRoleIdList(RootModel[List[ImpersonationRoleId]]):
    root: List[ImpersonationRoleId] = Field(..., max_length=10, min_length=0)


class ImpersonationRoleName(
    RootModel[
        constr(pattern=r'[^\x00-\x1F\x7F\x3C\x3E\x5C]+', min_length=1, max_length=64)
    ]
):
    root: constr(pattern=r'[^\x00-\x1F\x7F\x3C\x3E\x5C]+', min_length=1, max_length=64)


class ImpersonationRoleType(Enum):
    FULL_ACCESS = 'FULL_ACCESS'
    READ_ONLY = 'READ_ONLY'


class ImpersonationRuleDescription(
    RootModel[
        constr(
            pattern=r'[^\x00-\x09\x0B\x0C\x0E-\x1F\x7F\x3C\x3E\x5C]+',
            min_length=1,
            max_length=256,
        )
    ]
):
    root: constr(
        pattern=r'[^\x00-\x09\x0B\x0C\x0E-\x1F\x7F\x3C\x3E\x5C]+',
        min_length=1,
        max_length=256,
    )


class ImpersonationRuleId(
    RootModel[constr(pattern=r'[a-zA-Z0-9_-]+', min_length=1, max_length=64)]
):
    root: constr(pattern=r'[a-zA-Z0-9_-]+', min_length=1, max_length=64)


class ImpersonationRuleName(
    RootModel[
        constr(pattern=r'[^\x00-\x1F\x7F\x3C\x3E\x5C]+', min_length=1, max_length=64)
    ]
):
    root: constr(pattern=r'[^\x00-\x1F\x7F\x3C\x3E\x5C]+', min_length=1, max_length=64)


class ImpersonationToken(
    RootModel[constr(pattern=r'[\x21-\x7e]+', min_length=1, max_length=256)]
):
    root: constr(pattern=r'[\x21-\x7e]+', min_length=1, max_length=256)


class InvalidConfigurationException(RootModel[Any]):
    root: Any


class InvalidCustomSesConfigurationException(RootModel[Any]):
    root: Any


class InvalidParameterException(RootModel[Any]):
    root: Any


class InvalidPasswordException(RootModel[Any]):
    root: Any


class IpAddress(
    RootModel[
        constr(
            pattern=r'^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$',
            min_length=1,
            max_length=15,
        )
    ]
):
    root: constr(
        pattern=r'^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$',
        min_length=1,
        max_length=15,
    )


class IpRange(
    RootModel[
        constr(
            pattern=r'^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])/([0-9]|[12][0-9]|3[0-2])$',
            min_length=1,
            max_length=18,
        )
    ]
):
    root: constr(
        pattern=r'^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])/([0-9]|[12][0-9]|3[0-2])$',
        min_length=1,
        max_length=18,
    )


class IpRangeList(RootModel[List[IpRange]]):
    root: List[IpRange] = Field(..., max_length=1024, min_length=0)


class KmsKeyArn(
    RootModel[
        constr(
            pattern=r'arn:aws:kms:[a-z0-9-]*:[a-z0-9-]+:[A-Za-z0-9][A-Za-z0-9:_/+=,@.-]{0,1023}',
            min_length=20,
            max_length=2048,
        )
    ]
):
    root: constr(
        pattern=r'arn:aws:kms:[a-z0-9-]*:[a-z0-9-]+:[A-Za-z0-9][A-Za-z0-9:_/+=,@.-]{0,1023}',
        min_length=20,
        max_length=2048,
    )


class LambdaArn(
    RootModel[
        constr(
            pattern=r'arn:aws:lambda:[a-z]{2}-[a-z]+-\d{1}:\d{12}:function:[a-zA-Z0-9\-_\.]+(:(\$LATEST|[a-zA-Z0-9\-_]+))?',
            min_length=49,
            max_length=256,
        )
    ]
):
    root: constr(
        pattern=r'arn:aws:lambda:[a-z]{2}-[a-z]+-\d{1}:\d{12}:function:[a-zA-Z0-9\-_\.]+(:(\$LATEST|[a-zA-Z0-9\-_]+))?',
        min_length=49,
        max_length=256,
    )


class LambdaAvailabilityProvider(BaseModel):
    LambdaArn_1: LambdaArn = Field(..., alias='LambdaArn')


class LimitExceededException(RootModel[Any]):
    root: Any


class ListTagsForResourceRequest(BaseModel):
    ResourceARN: AmazonResourceName


class LogGroupArn(
    RootModel[
        constr(
            pattern=r'arn:aws:logs:[a-z\-0-9]*:[0-9]{12}:log-group:([\.\-_/#A-Za-z0-9]+):\*$',
            min_length=47,
            max_length=562,
        )
    ]
):
    root: constr(
        pattern=r'arn:aws:logs:[a-z\-0-9]*:[0-9]{12}:log-group:([\.\-_/#A-Za-z0-9]+):\*$',
        min_length=47,
        max_length=562,
    )


class MailDomainInUseException(RootModel[Any]):
    root: Any


class MailDomainNotFoundException(RootModel[Any]):
    root: Any


class MailDomainStateException(RootModel[Any]):
    root: Any


class MailDomainSummary(BaseModel):
    DefaultDomain: Optional[Boolean] = None
    DomainName_1: Optional[DomainName] = Field(None, alias='DomainName')


class MailDomains(RootModel[List[MailDomainSummary]]):
    root: List[MailDomainSummary]


class MailboxExportErrorInfo(
    RootModel[constr(pattern=r'[\S\s]*', min_length=1, max_length=1024)]
):
    root: constr(pattern=r'[\S\s]*', min_length=1, max_length=1024)


class MailboxExportJobId(
    RootModel[constr(pattern=r'[A-Za-z0-9-]+', min_length=1, max_length=63)]
):
    root: constr(pattern=r'[A-Za-z0-9-]+', min_length=1, max_length=63)


class MailboxExportJobState(Enum):
    RUNNING = 'RUNNING'
    COMPLETED = 'COMPLETED'
    FAILED = 'FAILED'
    CANCELLED = 'CANCELLED'


class MailboxQuota(RootModel[conint(ge=1)]):
    root: conint(ge=1)


class MailboxSize(RootModel[confloat(ge=0.0)]):
    root: confloat(ge=0.0)


class MaxResults(RootModel[conint(ge=1, le=100)]):
    root: conint(ge=1, le=100)


class MemberType(Enum):
    GROUP = 'GROUP'
    USER = 'USER'


class MobileDeviceAccessRuleDescription(
    RootModel[constr(pattern=r'[\S\s]+', min_length=1, max_length=256)]
):
    root: constr(pattern=r'[\S\s]+', min_length=1, max_length=256)


class MobileDeviceAccessRuleEffect(Enum):
    ALLOW = 'ALLOW'
    DENY = 'DENY'


class MobileDeviceAccessRuleId(
    RootModel[constr(pattern=r'[a-zA-Z0-9_-]+', min_length=1, max_length=64)]
):
    root: constr(pattern=r'[a-zA-Z0-9_-]+', min_length=1, max_length=64)


class MobileDeviceAccessRuleName(
    RootModel[constr(pattern=r'[\S\s]+', min_length=1, max_length=64)]
):
    root: constr(pattern=r'[\S\s]+', min_length=1, max_length=64)


class NameAvailabilityException(RootModel[Any]):
    root: Any


class NextToken(
    RootModel[
        constr(pattern=r'[\S\s]*|[a-zA-Z0-9/+=]{1,1024}', min_length=1, max_length=1024)
    ]
):
    root: constr(
        pattern=r'[\S\s]*|[a-zA-Z0-9/+=]{1,1024}', min_length=1, max_length=1024
    )


class OrganizationId(
    RootModel[constr(pattern=r'^m-[0-9a-f]{32}$', min_length=34, max_length=34)]
):
    root: constr(pattern=r'^m-[0-9a-f]{32}$', min_length=34, max_length=34)


class OrganizationName(
    RootModel[
        constr(
            pattern=r'^(?!d-)([\da-zA-Z]+)([-][\da-zA-Z]+)*',
            min_length=1,
            max_length=62,
        )
    ]
):
    model_config = ConfigDict(
        regex_engine="python-re",
    )
    root: constr(
        pattern=r'^(?!d-)([\da-zA-Z]+)([-][\da-zA-Z]+)*', min_length=1, max_length=62
    )


class OrganizationNotFoundException(RootModel[Any]):
    root: Any


class OrganizationStateException(RootModel[Any]):
    root: Any


class Password(RootModel[SecretStr]):
    root: SecretStr


class Percentage(RootModel[conint(ge=0, le=100)]):
    root: conint(ge=0, le=100)


class PermissionType(Enum):
    FULL_ACCESS = 'FULL_ACCESS'
    SEND_AS = 'SEND_AS'
    SEND_ON_BEHALF = 'SEND_ON_BEHALF'


class PermissionValues(RootModel[List[PermissionType]]):
    root: List[PermissionType]


class PolicyDescription(RootModel[SecretStr]):
    root: SecretStr


class PutAccessControlRuleResponse(BaseModel):
    pass


class PutEmailMonitoringConfigurationResponse(BaseModel):
    pass


class PutInboundDmarcSettingsRequest(BaseModel):
    Enforced: BooleanObject
    OrganizationId_1: OrganizationId = Field(..., alias='OrganizationId')


class PutInboundDmarcSettingsResponse(BaseModel):
    pass


class PutMailboxPermissionsResponse(BaseModel):
    pass


class PutMobileDeviceAccessOverrideRequest(BaseModel):
    Description: Optional[MobileDeviceAccessRuleDescription] = None
    DeviceId_1: DeviceId = Field(..., alias='DeviceId')
    Effect: MobileDeviceAccessRuleEffect
    OrganizationId_1: OrganizationId = Field(..., alias='OrganizationId')
    UserId: EntityIdentifier


class PutMobileDeviceAccessOverrideResponse(BaseModel):
    pass


class PutRetentionPolicyResponse(BaseModel):
    pass


class RegisterMailDomainResponse(BaseModel):
    pass


class RegisterToWorkMailResponse(BaseModel):
    pass


class ReservedNameException(RootModel[Any]):
    root: Any


class ResetPasswordResponse(BaseModel):
    pass


class ResourceId(
    RootModel[constr(pattern=r'^r-[0-9a-f]{32}$', min_length=34, max_length=34)]
):
    root: constr(pattern=r'^r-[0-9a-f]{32}$', min_length=34, max_length=34)


class ResourceName(
    RootModel[
        constr(
            pattern=r'[\w\-.]+(@[a-zA-Z0-9.\-]+\.[a-zA-Z0-9-]{2,})?',
            min_length=1,
            max_length=20,
        )
    ]
):
    root: constr(
        pattern=r'[\w\-.]+(@[a-zA-Z0-9.\-]+\.[a-zA-Z0-9-]{2,})?',
        min_length=1,
        max_length=20,
    )


class ResourceNotFoundException(RootModel[Any]):
    root: Any


class ResourceType(Enum):
    ROOM = 'ROOM'
    EQUIPMENT = 'EQUIPMENT'


class RetentionAction(Enum):
    NONE = 'NONE'
    DELETE = 'DELETE'
    PERMANENTLY_DELETE = 'PERMANENTLY_DELETE'


class RetentionPeriod(RootModel[conint(ge=1, le=730)]):
    root: conint(ge=1, le=730)


class RoleArn(RootModel[constr(min_length=20, max_length=2048)]):
    root: constr(min_length=20, max_length=2048)


class S3BucketName(
    RootModel[constr(pattern=r'[A-Za-z0-9.-]+', min_length=1, max_length=63)]
):
    root: constr(pattern=r'[A-Za-z0-9.-]+', min_length=1, max_length=63)


class S3ObjectKey(
    RootModel[constr(pattern=r'[A-Za-z0-9!_.*\'()/-]+', min_length=1, max_length=1023)]
):
    root: constr(pattern=r'[A-Za-z0-9!_.*\'()/-]+', min_length=1, max_length=1023)


class ShortString(
    RootModel[constr(pattern=r'[a-zA-Z0-9_-]+', min_length=1, max_length=64)]
):
    root: constr(pattern=r'[a-zA-Z0-9_-]+', min_length=1, max_length=64)


class StartMailboxExportJobResponse(BaseModel):
    JobId: Optional[MailboxExportJobId] = None


class String(RootModel[constr(max_length=256)]):
    root: constr(max_length=256)


class TagKey(RootModel[constr(min_length=1, max_length=128)]):
    root: constr(min_length=1, max_length=128)


class TagKeyList(RootModel[List[TagKey]]):
    root: List[TagKey] = Field(..., max_length=50, min_length=0)


class TagResourceResponse(BaseModel):
    pass


class TagValue(RootModel[constr(min_length=0, max_length=256)]):
    root: constr(min_length=0, max_length=256)


class TargetUsers(RootModel[List[EntityIdentifier]]):
    root: List[EntityIdentifier] = Field(..., max_length=10, min_length=1)


class TestAvailabilityConfigurationResponse(BaseModel):
    FailureReason: Optional[String] = None
    TestPassed: Optional[Boolean] = None


class Timestamp(RootModel[datetime]):
    root: datetime


class TooManyTagsException(RootModel[Any]):
    root: Any


class UnsupportedOperationException(RootModel[Any]):
    root: Any


class UntagResourceRequest(BaseModel):
    ResourceARN: AmazonResourceName
    TagKeys: TagKeyList


class UntagResourceResponse(BaseModel):
    pass


class UpdateAvailabilityConfigurationResponse(BaseModel):
    pass


class UpdateDefaultMailDomainResponse(BaseModel):
    pass


class UpdateImpersonationRoleResponse(BaseModel):
    pass


class UpdateMailboxQuotaResponse(BaseModel):
    pass


class UpdateMobileDeviceAccessRuleRequest(BaseModel):
    Description: Optional[MobileDeviceAccessRuleDescription] = None
    DeviceModels: Optional[DeviceModelList] = None
    DeviceOperatingSystems: Optional[DeviceOperatingSystemList] = None
    DeviceTypes: Optional[DeviceTypeList] = None
    DeviceUserAgents: Optional[DeviceUserAgentList] = None
    Effect: MobileDeviceAccessRuleEffect
    MobileDeviceAccessRuleId_1: MobileDeviceAccessRuleId = Field(
        ..., alias='MobileDeviceAccessRuleId'
    )
    Name: MobileDeviceAccessRuleName
    NotDeviceModels: Optional[DeviceModelList] = None
    NotDeviceOperatingSystems: Optional[DeviceOperatingSystemList] = None
    NotDeviceTypes: Optional[DeviceTypeList] = None
    NotDeviceUserAgents: Optional[DeviceUserAgentList] = None
    OrganizationId_1: OrganizationId = Field(..., alias='OrganizationId')


class UpdateMobileDeviceAccessRuleResponse(BaseModel):
    pass


class UpdatePrimaryEmailAddressResponse(BaseModel):
    pass


class UpdateResourceResponse(BaseModel):
    pass


class Url(
    RootModel[constr(pattern=r'https?://[A-Za-z0-9.-]+(:[0-9]+)?/.*', max_length=256)]
):
    root: constr(pattern=r'https?://[A-Za-z0-9.-]+(:[0-9]+)?/.*', max_length=256)


class UserName(
    RootModel[
        constr(
            pattern=r'[\w\-.]+(@[a-zA-Z0-9.\-]+\.[a-zA-Z0-9-]{2,})?',
            min_length=1,
            max_length=64,
        )
    ]
):
    root: constr(
        pattern=r'[\w\-.]+(@[a-zA-Z0-9.\-]+\.[a-zA-Z0-9-]{2,})?',
        min_length=1,
        max_length=64,
    )


class UserRole(Enum):
    USER = 'USER'
    RESOURCE = 'RESOURCE'
    SYSTEM_USER = 'SYSTEM_USER'


class WorkMailDomainName(
    RootModel[
        constr(pattern=r'[a-zA-Z0-9.-]+\.[a-zA-Z-]{2,}', min_length=3, max_length=209)
    ]
):
    root: constr(pattern=r'[a-zA-Z0-9.-]+\.[a-zA-Z-]{2,}', min_length=3, max_length=209)


class WorkMailIdentifier(RootModel[constr(min_length=12, max_length=256)]):
    root: constr(min_length=12, max_length=256)


class XAmzTarget(Enum):
    WorkMailService_AssociateDelegateToResource = (
        'WorkMailService.AssociateDelegateToResource'
    )


class XAmzTarget1(Enum):
    WorkMailService_AssociateMemberToGroup = 'WorkMailService.AssociateMemberToGroup'


class XAmzTarget2(Enum):
    WorkMailService_AssumeImpersonationRole = 'WorkMailService.AssumeImpersonationRole'


class XAmzTarget3(Enum):
    WorkMailService_CancelMailboxExportJob = 'WorkMailService.CancelMailboxExportJob'


class XAmzTarget4(Enum):
    WorkMailService_CreateAlias = 'WorkMailService.CreateAlias'


class XAmzTarget5(Enum):
    WorkMailService_CreateAvailabilityConfiguration = (
        'WorkMailService.CreateAvailabilityConfiguration'
    )


class XAmzTarget6(Enum):
    WorkMailService_CreateGroup = 'WorkMailService.CreateGroup'


class XAmzTarget7(Enum):
    WorkMailService_CreateImpersonationRole = 'WorkMailService.CreateImpersonationRole'


class XAmzTarget8(Enum):
    WorkMailService_CreateMobileDeviceAccessRule = (
        'WorkMailService.CreateMobileDeviceAccessRule'
    )


class XAmzTarget9(Enum):
    WorkMailService_CreateOrganization = 'WorkMailService.CreateOrganization'


class XAmzTarget10(Enum):
    WorkMailService_CreateResource = 'WorkMailService.CreateResource'


class XAmzTarget11(Enum):
    WorkMailService_CreateUser = 'WorkMailService.CreateUser'


class XAmzTarget12(Enum):
    WorkMailService_DeleteAccessControlRule = 'WorkMailService.DeleteAccessControlRule'


class XAmzTarget13(Enum):
    WorkMailService_DeleteAlias = 'WorkMailService.DeleteAlias'


class XAmzTarget14(Enum):
    WorkMailService_DeleteAvailabilityConfiguration = (
        'WorkMailService.DeleteAvailabilityConfiguration'
    )


class XAmzTarget15(Enum):
    WorkMailService_DeleteEmailMonitoringConfiguration = (
        'WorkMailService.DeleteEmailMonitoringConfiguration'
    )


class XAmzTarget16(Enum):
    WorkMailService_DeleteGroup = 'WorkMailService.DeleteGroup'


class XAmzTarget17(Enum):
    WorkMailService_DeleteImpersonationRole = 'WorkMailService.DeleteImpersonationRole'


class XAmzTarget18(Enum):
    WorkMailService_DeleteMailboxPermissions = (
        'WorkMailService.DeleteMailboxPermissions'
    )


class XAmzTarget19(Enum):
    WorkMailService_DeleteMobileDeviceAccessOverride = (
        'WorkMailService.DeleteMobileDeviceAccessOverride'
    )


class XAmzTarget20(Enum):
    WorkMailService_DeleteMobileDeviceAccessRule = (
        'WorkMailService.DeleteMobileDeviceAccessRule'
    )


class XAmzTarget21(Enum):
    WorkMailService_DeleteOrganization = 'WorkMailService.DeleteOrganization'


class XAmzTarget22(Enum):
    WorkMailService_DeleteResource = 'WorkMailService.DeleteResource'


class XAmzTarget23(Enum):
    WorkMailService_DeleteRetentionPolicy = 'WorkMailService.DeleteRetentionPolicy'


class XAmzTarget24(Enum):
    WorkMailService_DeleteUser = 'WorkMailService.DeleteUser'


class XAmzTarget25(Enum):
    WorkMailService_DeregisterFromWorkMail = 'WorkMailService.DeregisterFromWorkMail'


class XAmzTarget26(Enum):
    WorkMailService_DeregisterMailDomain = 'WorkMailService.DeregisterMailDomain'


class XAmzTarget27(Enum):
    WorkMailService_DescribeEmailMonitoringConfiguration = (
        'WorkMailService.DescribeEmailMonitoringConfiguration'
    )


class XAmzTarget28(Enum):
    WorkMailService_DescribeGroup = 'WorkMailService.DescribeGroup'


class XAmzTarget29(Enum):
    WorkMailService_DescribeInboundDmarcSettings = (
        'WorkMailService.DescribeInboundDmarcSettings'
    )


class XAmzTarget30(Enum):
    WorkMailService_DescribeMailboxExportJob = (
        'WorkMailService.DescribeMailboxExportJob'
    )


class XAmzTarget31(Enum):
    WorkMailService_DescribeOrganization = 'WorkMailService.DescribeOrganization'


class XAmzTarget32(Enum):
    WorkMailService_DescribeResource = 'WorkMailService.DescribeResource'


class XAmzTarget33(Enum):
    WorkMailService_DescribeUser = 'WorkMailService.DescribeUser'


class XAmzTarget34(Enum):
    WorkMailService_DisassociateDelegateFromResource = (
        'WorkMailService.DisassociateDelegateFromResource'
    )


class XAmzTarget35(Enum):
    WorkMailService_DisassociateMemberFromGroup = (
        'WorkMailService.DisassociateMemberFromGroup'
    )


class XAmzTarget36(Enum):
    WorkMailService_GetAccessControlEffect = 'WorkMailService.GetAccessControlEffect'


class XAmzTarget37(Enum):
    WorkMailService_GetDefaultRetentionPolicy = (
        'WorkMailService.GetDefaultRetentionPolicy'
    )


class XAmzTarget38(Enum):
    WorkMailService_GetImpersonationRole = 'WorkMailService.GetImpersonationRole'


class XAmzTarget39(Enum):
    WorkMailService_GetImpersonationRoleEffect = (
        'WorkMailService.GetImpersonationRoleEffect'
    )


class XAmzTarget40(Enum):
    WorkMailService_GetMailDomain = 'WorkMailService.GetMailDomain'


class XAmzTarget41(Enum):
    WorkMailService_GetMailboxDetails = 'WorkMailService.GetMailboxDetails'


class XAmzTarget42(Enum):
    WorkMailService_GetMobileDeviceAccessEffect = (
        'WorkMailService.GetMobileDeviceAccessEffect'
    )


class XAmzTarget43(Enum):
    WorkMailService_GetMobileDeviceAccessOverride = (
        'WorkMailService.GetMobileDeviceAccessOverride'
    )


class XAmzTarget44(Enum):
    WorkMailService_ListAccessControlRules = 'WorkMailService.ListAccessControlRules'


class XAmzTarget45(Enum):
    WorkMailService_ListAliases = 'WorkMailService.ListAliases'


class XAmzTarget46(Enum):
    WorkMailService_ListAvailabilityConfigurations = (
        'WorkMailService.ListAvailabilityConfigurations'
    )


class XAmzTarget47(Enum):
    WorkMailService_ListGroupMembers = 'WorkMailService.ListGroupMembers'


class XAmzTarget48(Enum):
    WorkMailService_ListGroups = 'WorkMailService.ListGroups'


class XAmzTarget49(Enum):
    WorkMailService_ListImpersonationRoles = 'WorkMailService.ListImpersonationRoles'


class XAmzTarget50(Enum):
    WorkMailService_ListMailDomains = 'WorkMailService.ListMailDomains'


class XAmzTarget51(Enum):
    WorkMailService_ListMailboxExportJobs = 'WorkMailService.ListMailboxExportJobs'


class XAmzTarget52(Enum):
    WorkMailService_ListMailboxPermissions = 'WorkMailService.ListMailboxPermissions'


class XAmzTarget53(Enum):
    WorkMailService_ListMobileDeviceAccessOverrides = (
        'WorkMailService.ListMobileDeviceAccessOverrides'
    )


class XAmzTarget54(Enum):
    WorkMailService_ListMobileDeviceAccessRules = (
        'WorkMailService.ListMobileDeviceAccessRules'
    )


class XAmzTarget55(Enum):
    WorkMailService_ListOrganizations = 'WorkMailService.ListOrganizations'


class XAmzTarget56(Enum):
    WorkMailService_ListResourceDelegates = 'WorkMailService.ListResourceDelegates'


class XAmzTarget57(Enum):
    WorkMailService_ListResources = 'WorkMailService.ListResources'


class XAmzTarget58(Enum):
    WorkMailService_ListTagsForResource = 'WorkMailService.ListTagsForResource'


class XAmzTarget59(Enum):
    WorkMailService_ListUsers = 'WorkMailService.ListUsers'


class XAmzTarget60(Enum):
    WorkMailService_PutAccessControlRule = 'WorkMailService.PutAccessControlRule'


class XAmzTarget61(Enum):
    WorkMailService_PutEmailMonitoringConfiguration = (
        'WorkMailService.PutEmailMonitoringConfiguration'
    )


class XAmzTarget62(Enum):
    WorkMailService_PutInboundDmarcSettings = 'WorkMailService.PutInboundDmarcSettings'


class XAmzTarget63(Enum):
    WorkMailService_PutMailboxPermissions = 'WorkMailService.PutMailboxPermissions'


class XAmzTarget64(Enum):
    WorkMailService_PutMobileDeviceAccessOverride = (
        'WorkMailService.PutMobileDeviceAccessOverride'
    )


class XAmzTarget65(Enum):
    WorkMailService_PutRetentionPolicy = 'WorkMailService.PutRetentionPolicy'


class XAmzTarget66(Enum):
    WorkMailService_RegisterMailDomain = 'WorkMailService.RegisterMailDomain'


class XAmzTarget67(Enum):
    WorkMailService_RegisterToWorkMail = 'WorkMailService.RegisterToWorkMail'


class XAmzTarget68(Enum):
    WorkMailService_ResetPassword = 'WorkMailService.ResetPassword'


class XAmzTarget69(Enum):
    WorkMailService_StartMailboxExportJob = 'WorkMailService.StartMailboxExportJob'


class XAmzTarget70(Enum):
    WorkMailService_TagResource = 'WorkMailService.TagResource'


class XAmzTarget71(Enum):
    WorkMailService_TestAvailabilityConfiguration = (
        'WorkMailService.TestAvailabilityConfiguration'
    )


class XAmzTarget72(Enum):
    WorkMailService_UntagResource = 'WorkMailService.UntagResource'


class XAmzTarget73(Enum):
    WorkMailService_UpdateAvailabilityConfiguration = (
        'WorkMailService.UpdateAvailabilityConfiguration'
    )


class XAmzTarget74(Enum):
    WorkMailService_UpdateDefaultMailDomain = 'WorkMailService.UpdateDefaultMailDomain'


class XAmzTarget75(Enum):
    WorkMailService_UpdateImpersonationRole = 'WorkMailService.UpdateImpersonationRole'


class XAmzTarget76(Enum):
    WorkMailService_UpdateMailboxQuota = 'WorkMailService.UpdateMailboxQuota'


class XAmzTarget77(Enum):
    WorkMailService_UpdateMobileDeviceAccessRule = (
        'WorkMailService.UpdateMobileDeviceAccessRule'
    )


class XAmzTarget78(Enum):
    WorkMailService_UpdatePrimaryEmailAddress = (
        'WorkMailService.UpdatePrimaryEmailAddress'
    )


class XAmzTarget79(Enum):
    WorkMailService_UpdateResource = 'WorkMailService.UpdateResource'


class Aliases(RootModel[List[EmailAddress]]):
    root: List[EmailAddress]


class AssociateDelegateToResourceRequest(BaseModel):
    EntityId: WorkMailIdentifier
    OrganizationId_1: OrganizationId = Field(..., alias='OrganizationId')
    ResourceId_1: ResourceId = Field(..., alias='ResourceId')


class AssociateMemberToGroupRequest(BaseModel):
    GroupId: WorkMailIdentifier
    MemberId: WorkMailIdentifier
    OrganizationId_1: OrganizationId = Field(..., alias='OrganizationId')


class AssumeImpersonationRoleRequest(BaseModel):
    ImpersonationRoleId_1: ImpersonationRoleId = Field(..., alias='ImpersonationRoleId')
    OrganizationId_1: OrganizationId = Field(..., alias='OrganizationId')


class AssumeImpersonationRoleResponse(BaseModel):
    ExpiresIn_1: Optional[ExpiresIn] = Field(None, alias='ExpiresIn')
    Token: Optional[ImpersonationToken] = None


class BookingOptions(BaseModel):
    AutoAcceptRequests: Optional[Boolean] = None
    AutoDeclineConflictingRequests: Optional[Boolean] = None
    AutoDeclineRecurringRequests: Optional[Boolean] = None


class CancelMailboxExportJobRequest(BaseModel):
    ClientToken: IdempotencyClientToken
    JobId: MailboxExportJobId
    OrganizationId_1: OrganizationId = Field(..., alias='OrganizationId')


class CreateAliasRequest(BaseModel):
    Alias: EmailAddress
    EntityId: WorkMailIdentifier
    OrganizationId_1: OrganizationId = Field(..., alias='OrganizationId')


class CreateGroupRequest(BaseModel):
    Name: GroupName
    OrganizationId_1: OrganizationId = Field(..., alias='OrganizationId')


class CreateGroupResponse(BaseModel):
    GroupId: Optional[WorkMailIdentifier] = None


class CreateImpersonationRoleResponse(BaseModel):
    ImpersonationRoleId_1: Optional[ImpersonationRoleId] = Field(
        None, alias='ImpersonationRoleId'
    )


class CreateMobileDeviceAccessRuleRequest(BaseModel):
    ClientToken: Optional[IdempotencyClientToken] = None
    Description: Optional[MobileDeviceAccessRuleDescription] = None
    DeviceModels: Optional[DeviceModelList] = None
    DeviceOperatingSystems: Optional[DeviceOperatingSystemList] = None
    DeviceTypes: Optional[DeviceTypeList] = None
    DeviceUserAgents: Optional[DeviceUserAgentList] = None
    Effect: MobileDeviceAccessRuleEffect
    Name: MobileDeviceAccessRuleName
    NotDeviceModels: Optional[DeviceModelList] = None
    NotDeviceOperatingSystems: Optional[DeviceOperatingSystemList] = None
    NotDeviceTypes: Optional[DeviceTypeList] = None
    NotDeviceUserAgents: Optional[DeviceUserAgentList] = None
    OrganizationId_1: OrganizationId = Field(..., alias='OrganizationId')


class CreateMobileDeviceAccessRuleResponse(BaseModel):
    MobileDeviceAccessRuleId_1: Optional[MobileDeviceAccessRuleId] = Field(
        None, alias='MobileDeviceAccessRuleId'
    )


class CreateOrganizationResponse(BaseModel):
    OrganizationId_1: Optional[OrganizationId] = Field(None, alias='OrganizationId')


class CreateResourceRequest(BaseModel):
    Name: ResourceName
    OrganizationId_1: OrganizationId = Field(..., alias='OrganizationId')
    Type: ResourceType


class CreateResourceResponse(BaseModel):
    ResourceId_1: Optional[ResourceId] = Field(None, alias='ResourceId')


class CreateUserRequest(BaseModel):
    DisplayName: String
    Name: UserName
    OrganizationId_1: OrganizationId = Field(..., alias='OrganizationId')
    Password_1: Password = Field(..., alias='Password')


class CreateUserResponse(BaseModel):
    UserId: Optional[WorkMailIdentifier] = None


class Delegate(BaseModel):
    Id: String
    Type: MemberType


class DeleteAccessControlRuleRequest(BaseModel):
    Name: AccessControlRuleName
    OrganizationId_1: OrganizationId = Field(..., alias='OrganizationId')


class DeleteAliasRequest(BaseModel):
    Alias: EmailAddress
    EntityId: WorkMailIdentifier
    OrganizationId_1: OrganizationId = Field(..., alias='OrganizationId')


class DeleteAvailabilityConfigurationRequest(BaseModel):
    DomainName_1: DomainName = Field(..., alias='DomainName')
    OrganizationId_1: OrganizationId = Field(..., alias='OrganizationId')


class DeleteEmailMonitoringConfigurationRequest(BaseModel):
    OrganizationId_1: OrganizationId = Field(..., alias='OrganizationId')


class DeleteGroupRequest(BaseModel):
    GroupId: WorkMailIdentifier
    OrganizationId_1: OrganizationId = Field(..., alias='OrganizationId')


class DeleteImpersonationRoleRequest(BaseModel):
    ImpersonationRoleId_1: ImpersonationRoleId = Field(..., alias='ImpersonationRoleId')
    OrganizationId_1: OrganizationId = Field(..., alias='OrganizationId')


class DeleteMailboxPermissionsRequest(BaseModel):
    EntityId: WorkMailIdentifier
    GranteeId: WorkMailIdentifier
    OrganizationId_1: OrganizationId = Field(..., alias='OrganizationId')


class DeleteMobileDeviceAccessOverrideRequest(BaseModel):
    DeviceId_1: DeviceId = Field(..., alias='DeviceId')
    OrganizationId_1: OrganizationId = Field(..., alias='OrganizationId')
    UserId: EntityIdentifier


class DeleteMobileDeviceAccessRuleRequest(BaseModel):
    MobileDeviceAccessRuleId_1: MobileDeviceAccessRuleId = Field(
        ..., alias='MobileDeviceAccessRuleId'
    )
    OrganizationId_1: OrganizationId = Field(..., alias='OrganizationId')


class DeleteOrganizationRequest(BaseModel):
    ClientToken: Optional[IdempotencyClientToken] = None
    DeleteDirectory: Boolean
    OrganizationId_1: OrganizationId = Field(..., alias='OrganizationId')


class DeleteOrganizationResponse(BaseModel):
    OrganizationId_1: Optional[OrganizationId] = Field(None, alias='OrganizationId')
    State: Optional[String] = None


class DeleteResourceRequest(BaseModel):
    OrganizationId_1: OrganizationId = Field(..., alias='OrganizationId')
    ResourceId_1: ResourceId = Field(..., alias='ResourceId')


class DeleteRetentionPolicyRequest(BaseModel):
    Id: ShortString
    OrganizationId_1: OrganizationId = Field(..., alias='OrganizationId')


class DeleteUserRequest(BaseModel):
    OrganizationId_1: OrganizationId = Field(..., alias='OrganizationId')
    UserId: WorkMailIdentifier


class DeregisterFromWorkMailRequest(BaseModel):
    EntityId: WorkMailIdentifier
    OrganizationId_1: OrganizationId = Field(..., alias='OrganizationId')


class DeregisterMailDomainRequest(BaseModel):
    DomainName: WorkMailDomainName
    OrganizationId_1: OrganizationId = Field(..., alias='OrganizationId')


class DescribeEmailMonitoringConfigurationRequest(BaseModel):
    OrganizationId_1: OrganizationId = Field(..., alias='OrganizationId')


class DescribeEmailMonitoringConfigurationResponse(BaseModel):
    LogGroupArn_1: Optional[LogGroupArn] = Field(None, alias='LogGroupArn')
    RoleArn_1: Optional[RoleArn] = Field(None, alias='RoleArn')


class DescribeGroupRequest(BaseModel):
    GroupId: WorkMailIdentifier
    OrganizationId_1: OrganizationId = Field(..., alias='OrganizationId')


class DescribeGroupResponse(BaseModel):
    DisabledDate: Optional[Timestamp] = None
    Email: Optional[EmailAddress] = None
    EnabledDate: Optional[Timestamp] = None
    GroupId: Optional[WorkMailIdentifier] = None
    Name: Optional[GroupName] = None
    State: Optional[EntityState] = None


class DescribeInboundDmarcSettingsRequest(BaseModel):
    OrganizationId_1: OrganizationId = Field(..., alias='OrganizationId')


class DescribeMailboxExportJobRequest(BaseModel):
    JobId: MailboxExportJobId
    OrganizationId_1: OrganizationId = Field(..., alias='OrganizationId')


class DescribeMailboxExportJobResponse(BaseModel):
    Description_1: Optional[Description] = Field(None, alias='Description')
    EndTime: Optional[Timestamp] = None
    EntityId: Optional[WorkMailIdentifier] = None
    ErrorInfo: Optional[MailboxExportErrorInfo] = None
    EstimatedProgress: Optional[Percentage] = None
    KmsKeyArn_1: Optional[KmsKeyArn] = Field(None, alias='KmsKeyArn')
    RoleArn_1: Optional[RoleArn] = Field(None, alias='RoleArn')
    S3BucketName_1: Optional[S3BucketName] = Field(None, alias='S3BucketName')
    S3Path: Optional[S3ObjectKey] = None
    S3Prefix: Optional[S3ObjectKey] = None
    StartTime: Optional[Timestamp] = None
    State: Optional[MailboxExportJobState] = None


class DescribeOrganizationRequest(BaseModel):
    OrganizationId_1: OrganizationId = Field(..., alias='OrganizationId')


class DescribeOrganizationResponse(BaseModel):
    ARN: Optional[AmazonResourceName] = None
    Alias: Optional[OrganizationName] = None
    CompletedDate: Optional[Timestamp] = None
    DefaultMailDomain: Optional[String] = None
    DirectoryId: Optional[String] = None
    DirectoryType: Optional[String] = None
    ErrorMessage: Optional[String] = None
    OrganizationId_1: Optional[OrganizationId] = Field(None, alias='OrganizationId')
    State: Optional[String] = None


class DescribeResourceRequest(BaseModel):
    OrganizationId_1: OrganizationId = Field(..., alias='OrganizationId')
    ResourceId_1: ResourceId = Field(..., alias='ResourceId')


class DescribeResourceResponse(BaseModel):
    BookingOptions_1: Optional[BookingOptions] = Field(None, alias='BookingOptions')
    DisabledDate: Optional[Timestamp] = None
    Email: Optional[EmailAddress] = None
    EnabledDate: Optional[Timestamp] = None
    Name: Optional[ResourceName] = None
    ResourceId_1: Optional[ResourceId] = Field(None, alias='ResourceId')
    State: Optional[EntityState] = None
    Type: Optional[ResourceType] = None


class DescribeUserRequest(BaseModel):
    OrganizationId_1: OrganizationId = Field(..., alias='OrganizationId')
    UserId: WorkMailIdentifier


class DescribeUserResponse(BaseModel):
    DisabledDate: Optional[Timestamp] = None
    DisplayName: Optional[String] = None
    Email: Optional[EmailAddress] = None
    EnabledDate: Optional[Timestamp] = None
    Name: Optional[UserName] = None
    State: Optional[EntityState] = None
    UserId: Optional[WorkMailIdentifier] = None
    UserRole_1: Optional[UserRole] = Field(None, alias='UserRole')


class DisassociateDelegateFromResourceRequest(BaseModel):
    EntityId: WorkMailIdentifier
    OrganizationId_1: OrganizationId = Field(..., alias='OrganizationId')
    ResourceId_1: ResourceId = Field(..., alias='ResourceId')


class DisassociateMemberFromGroupRequest(BaseModel):
    GroupId: WorkMailIdentifier
    MemberId: WorkMailIdentifier
    OrganizationId_1: OrganizationId = Field(..., alias='OrganizationId')


class DnsRecord(BaseModel):
    Hostname: Optional[String] = None
    Type: Optional[String] = None
    Value: Optional[String] = None


class DnsRecords(RootModel[List[DnsRecord]]):
    root: List[DnsRecord]


class Domain(BaseModel):
    DomainName_1: Optional[DomainName] = Field(None, alias='DomainName')
    HostedZoneId_1: Optional[HostedZoneId] = Field(None, alias='HostedZoneId')


class Domains(RootModel[List[Domain]]):
    root: List[Domain] = Field(..., max_length=5, min_length=0)


class EwsAvailabilityProvider(BaseModel):
    EwsEndpoint: Url
    EwsPassword: Password
    EwsUsername: ExternalUserName


class FolderConfiguration(BaseModel):
    Action: RetentionAction
    Name: FolderName
    Period: Optional[RetentionPeriod] = None


class FolderConfigurations(RootModel[List[FolderConfiguration]]):
    root: List[FolderConfiguration]


class GetAccessControlEffectRequest(BaseModel):
    Action: AccessControlRuleAction
    ImpersonationRoleId_1: Optional[ImpersonationRoleId] = Field(
        None, alias='ImpersonationRoleId'
    )
    IpAddress_1: IpAddress = Field(..., alias='IpAddress')
    OrganizationId_1: OrganizationId = Field(..., alias='OrganizationId')
    UserId: Optional[WorkMailIdentifier] = None


class GetDefaultRetentionPolicyRequest(BaseModel):
    OrganizationId_1: OrganizationId = Field(..., alias='OrganizationId')


class GetDefaultRetentionPolicyResponse(BaseModel):
    Description: Optional[String] = None
    FolderConfigurations_1: Optional[FolderConfigurations] = Field(
        None, alias='FolderConfigurations'
    )
    Id: Optional[ShortString] = None
    Name: Optional[ShortString] = None


class GetImpersonationRoleEffectRequest(BaseModel):
    ImpersonationRoleId_1: ImpersonationRoleId = Field(..., alias='ImpersonationRoleId')
    OrganizationId_1: OrganizationId = Field(..., alias='OrganizationId')
    TargetUser: EntityIdentifier


class GetImpersonationRoleRequest(BaseModel):
    ImpersonationRoleId_1: ImpersonationRoleId = Field(..., alias='ImpersonationRoleId')
    OrganizationId_1: OrganizationId = Field(..., alias='OrganizationId')


class GetMailDomainRequest(BaseModel):
    DomainName: WorkMailDomainName
    OrganizationId_1: OrganizationId = Field(..., alias='OrganizationId')


class GetMailDomainResponse(BaseModel):
    DkimVerificationStatus: Optional[DnsRecordVerificationStatus] = None
    IsDefault: Optional[Boolean] = None
    IsTestDomain: Optional[Boolean] = None
    OwnershipVerificationStatus: Optional[DnsRecordVerificationStatus] = None
    Records: Optional[DnsRecords] = None


class GetMailboxDetailsRequest(BaseModel):
    OrganizationId_1: OrganizationId = Field(..., alias='OrganizationId')
    UserId: WorkMailIdentifier


class GetMailboxDetailsResponse(BaseModel):
    MailboxQuota_1: Optional[MailboxQuota] = Field(None, alias='MailboxQuota')
    MailboxSize_1: Optional[MailboxSize] = Field(None, alias='MailboxSize')


class GetMobileDeviceAccessEffectRequest(BaseModel):
    DeviceModel_1: Optional[DeviceModel] = Field(None, alias='DeviceModel')
    DeviceOperatingSystem_1: Optional[DeviceOperatingSystem] = Field(
        None, alias='DeviceOperatingSystem'
    )
    DeviceType_1: Optional[DeviceType] = Field(None, alias='DeviceType')
    DeviceUserAgent_1: Optional[DeviceUserAgent] = Field(None, alias='DeviceUserAgent')
    OrganizationId_1: OrganizationId = Field(..., alias='OrganizationId')


class GetMobileDeviceAccessOverrideRequest(BaseModel):
    DeviceId_1: DeviceId = Field(..., alias='DeviceId')
    OrganizationId_1: OrganizationId = Field(..., alias='OrganizationId')
    UserId: EntityIdentifier


class GetMobileDeviceAccessOverrideResponse(BaseModel):
    DateCreated: Optional[Timestamp] = None
    DateModified: Optional[Timestamp] = None
    Description: Optional[MobileDeviceAccessRuleDescription] = None
    DeviceId_1: Optional[DeviceId] = Field(None, alias='DeviceId')
    Effect: Optional[MobileDeviceAccessRuleEffect] = None
    UserId: Optional[WorkMailIdentifier] = None


class Group(BaseModel):
    DisabledDate: Optional[Timestamp] = None
    Email: Optional[EmailAddress] = None
    EnabledDate: Optional[Timestamp] = None
    Id: Optional[WorkMailIdentifier] = None
    Name: Optional[GroupName] = None
    State: Optional[EntityState] = None


class Groups(RootModel[List[Group]]):
    root: List[Group]


class ImpersonationMatchedRule(BaseModel):
    ImpersonationRuleId_1: Optional[ImpersonationRuleId] = Field(
        None, alias='ImpersonationRuleId'
    )
    Name: Optional[ImpersonationRuleName] = None


class ImpersonationMatchedRuleList(RootModel[List[ImpersonationMatchedRule]]):
    root: List[ImpersonationMatchedRule] = Field(..., max_length=10, min_length=0)


class ImpersonationRole(BaseModel):
    DateCreated: Optional[Timestamp] = None
    DateModified: Optional[Timestamp] = None
    ImpersonationRoleId_1: Optional[ImpersonationRoleId] = Field(
        None, alias='ImpersonationRoleId'
    )
    Name: Optional[ImpersonationRoleName] = None
    Type: Optional[ImpersonationRoleType] = None


class ImpersonationRoleList(RootModel[List[ImpersonationRole]]):
    root: List[ImpersonationRole] = Field(..., max_length=20, min_length=0)


class ImpersonationRule(BaseModel):
    Description: Optional[ImpersonationRuleDescription] = None
    Effect: AccessEffect
    ImpersonationRuleId_1: ImpersonationRuleId = Field(..., alias='ImpersonationRuleId')
    Name: Optional[ImpersonationRuleName] = None
    NotTargetUsers: Optional[TargetUsers] = None
    TargetUsers_1: Optional[TargetUsers] = Field(None, alias='TargetUsers')


class ImpersonationRuleList(RootModel[List[ImpersonationRule]]):
    root: List[ImpersonationRule] = Field(..., max_length=10, min_length=0)


class ListAccessControlRulesRequest(BaseModel):
    OrganizationId_1: OrganizationId = Field(..., alias='OrganizationId')


class ListAliasesRequest(BaseModel):
    EntityId: WorkMailIdentifier
    MaxResults_1: Optional[MaxResults] = Field(None, alias='MaxResults')
    NextToken_1: Optional[NextToken] = Field(None, alias='NextToken')
    OrganizationId_1: OrganizationId = Field(..., alias='OrganizationId')


class ListAliasesResponse(BaseModel):
    Aliases_1: Optional[Aliases] = Field(None, alias='Aliases')
    NextToken_1: Optional[NextToken] = Field(None, alias='NextToken')


class ListAvailabilityConfigurationsRequest(BaseModel):
    MaxResults_1: Optional[MaxResults] = Field(None, alias='MaxResults')
    NextToken_1: Optional[NextToken] = Field(None, alias='NextToken')
    OrganizationId_1: OrganizationId = Field(..., alias='OrganizationId')


class ListGroupMembersRequest(BaseModel):
    GroupId: WorkMailIdentifier
    MaxResults_1: Optional[MaxResults] = Field(None, alias='MaxResults')
    NextToken_1: Optional[NextToken] = Field(None, alias='NextToken')
    OrganizationId_1: OrganizationId = Field(..., alias='OrganizationId')


class ListGroupsRequest(BaseModel):
    MaxResults_1: Optional[MaxResults] = Field(None, alias='MaxResults')
    NextToken_1: Optional[NextToken] = Field(None, alias='NextToken')
    OrganizationId_1: OrganizationId = Field(..., alias='OrganizationId')


class ListGroupsResponse(BaseModel):
    Groups_1: Optional[Groups] = Field(None, alias='Groups')
    NextToken_1: Optional[NextToken] = Field(None, alias='NextToken')


class ListImpersonationRolesRequest(BaseModel):
    MaxResults_1: Optional[MaxResults] = Field(None, alias='MaxResults')
    NextToken_1: Optional[NextToken] = Field(None, alias='NextToken')
    OrganizationId_1: OrganizationId = Field(..., alias='OrganizationId')


class ListImpersonationRolesResponse(BaseModel):
    NextToken_1: Optional[NextToken] = Field(None, alias='NextToken')
    Roles: Optional[ImpersonationRoleList] = None


class ListMailDomainsRequest(BaseModel):
    MaxResults_1: Optional[MaxResults] = Field(None, alias='MaxResults')
    NextToken_1: Optional[NextToken] = Field(None, alias='NextToken')
    OrganizationId_1: OrganizationId = Field(..., alias='OrganizationId')


class ListMailDomainsResponse(BaseModel):
    MailDomains_1: Optional[MailDomains] = Field(None, alias='MailDomains')
    NextToken_1: Optional[NextToken] = Field(None, alias='NextToken')


class ListMailboxExportJobsRequest(BaseModel):
    MaxResults_1: Optional[MaxResults] = Field(None, alias='MaxResults')
    NextToken_1: Optional[NextToken] = Field(None, alias='NextToken')
    OrganizationId_1: OrganizationId = Field(..., alias='OrganizationId')


class ListMailboxPermissionsRequest(BaseModel):
    EntityId: WorkMailIdentifier
    MaxResults_1: Optional[MaxResults] = Field(None, alias='MaxResults')
    NextToken_1: Optional[NextToken] = Field(None, alias='NextToken')
    OrganizationId_1: OrganizationId = Field(..., alias='OrganizationId')


class ListMobileDeviceAccessOverridesRequest(BaseModel):
    DeviceId_1: Optional[DeviceId] = Field(None, alias='DeviceId')
    MaxResults_1: Optional[MaxResults] = Field(None, alias='MaxResults')
    NextToken_1: Optional[NextToken] = Field(None, alias='NextToken')
    OrganizationId_1: OrganizationId = Field(..., alias='OrganizationId')
    UserId: Optional[EntityIdentifier] = None


class ListMobileDeviceAccessRulesRequest(BaseModel):
    OrganizationId_1: OrganizationId = Field(..., alias='OrganizationId')


class ListOrganizationsRequest(BaseModel):
    MaxResults_1: Optional[MaxResults] = Field(None, alias='MaxResults')
    NextToken_1: Optional[NextToken] = Field(None, alias='NextToken')


class ListResourceDelegatesRequest(BaseModel):
    MaxResults_1: Optional[MaxResults] = Field(None, alias='MaxResults')
    NextToken_1: Optional[NextToken] = Field(None, alias='NextToken')
    OrganizationId_1: OrganizationId = Field(..., alias='OrganizationId')
    ResourceId: WorkMailIdentifier


class ListResourcesRequest(BaseModel):
    MaxResults_1: Optional[MaxResults] = Field(None, alias='MaxResults')
    NextToken_1: Optional[NextToken] = Field(None, alias='NextToken')
    OrganizationId_1: OrganizationId = Field(..., alias='OrganizationId')


class ListUsersRequest(BaseModel):
    MaxResults_1: Optional[MaxResults] = Field(None, alias='MaxResults')
    NextToken_1: Optional[NextToken] = Field(None, alias='NextToken')
    OrganizationId_1: OrganizationId = Field(..., alias='OrganizationId')


class MailboxExportJob(BaseModel):
    Description_1: Optional[Description] = Field(None, alias='Description')
    EndTime: Optional[Timestamp] = None
    EntityId: Optional[WorkMailIdentifier] = None
    EstimatedProgress: Optional[Percentage] = None
    JobId: Optional[MailboxExportJobId] = None
    S3BucketName_1: Optional[S3BucketName] = Field(None, alias='S3BucketName')
    S3Path: Optional[S3ObjectKey] = None
    StartTime: Optional[Timestamp] = None
    State: Optional[MailboxExportJobState] = None


class Member(BaseModel):
    DisabledDate: Optional[Timestamp] = None
    EnabledDate: Optional[Timestamp] = None
    Id: Optional[String] = None
    Name: Optional[String] = None
    State: Optional[EntityState] = None
    Type: Optional[MemberType] = None


class Members(RootModel[List[Member]]):
    root: List[Member]


class MobileDeviceAccessMatchedRule(BaseModel):
    MobileDeviceAccessRuleId_1: Optional[MobileDeviceAccessRuleId] = Field(
        None, alias='MobileDeviceAccessRuleId'
    )
    Name: Optional[MobileDeviceAccessRuleName] = None


class MobileDeviceAccessMatchedRuleList(RootModel[List[MobileDeviceAccessMatchedRule]]):
    root: List[MobileDeviceAccessMatchedRule] = Field(..., max_length=10, min_length=0)


class MobileDeviceAccessOverride(BaseModel):
    DateCreated: Optional[Timestamp] = None
    DateModified: Optional[Timestamp] = None
    Description: Optional[MobileDeviceAccessRuleDescription] = None
    DeviceId_1: Optional[DeviceId] = Field(None, alias='DeviceId')
    Effect: Optional[MobileDeviceAccessRuleEffect] = None
    UserId: Optional[WorkMailIdentifier] = None


class MobileDeviceAccessOverridesList(RootModel[List[MobileDeviceAccessOverride]]):
    root: List[MobileDeviceAccessOverride]


class MobileDeviceAccessRule(BaseModel):
    DateCreated: Optional[Timestamp] = None
    DateModified: Optional[Timestamp] = None
    Description: Optional[MobileDeviceAccessRuleDescription] = None
    DeviceModels: Optional[DeviceModelList] = None
    DeviceOperatingSystems: Optional[DeviceOperatingSystemList] = None
    DeviceTypes: Optional[DeviceTypeList] = None
    DeviceUserAgents: Optional[DeviceUserAgentList] = None
    Effect: Optional[MobileDeviceAccessRuleEffect] = None
    MobileDeviceAccessRuleId_1: Optional[MobileDeviceAccessRuleId] = Field(
        None, alias='MobileDeviceAccessRuleId'
    )
    Name: Optional[MobileDeviceAccessRuleName] = None
    NotDeviceModels: Optional[DeviceModelList] = None
    NotDeviceOperatingSystems: Optional[DeviceOperatingSystemList] = None
    NotDeviceTypes: Optional[DeviceTypeList] = None
    NotDeviceUserAgents: Optional[DeviceUserAgentList] = None


class MobileDeviceAccessRulesList(RootModel[List[MobileDeviceAccessRule]]):
    root: List[MobileDeviceAccessRule] = Field(..., max_length=10, min_length=0)


class OrganizationSummary(BaseModel):
    Alias: Optional[OrganizationName] = None
    DefaultMailDomain: Optional[DomainName] = None
    ErrorMessage: Optional[String] = None
    OrganizationId_1: Optional[OrganizationId] = Field(None, alias='OrganizationId')
    State: Optional[String] = None


class Permission(BaseModel):
    GranteeId: WorkMailIdentifier
    GranteeType: MemberType
    PermissionValues_1: PermissionValues = Field(..., alias='PermissionValues')


class Permissions(RootModel[List[Permission]]):
    root: List[Permission]


class PutEmailMonitoringConfigurationRequest(BaseModel):
    LogGroupArn_1: LogGroupArn = Field(..., alias='LogGroupArn')
    OrganizationId_1: OrganizationId = Field(..., alias='OrganizationId')
    RoleArn_1: RoleArn = Field(..., alias='RoleArn')


class PutMailboxPermissionsRequest(BaseModel):
    EntityId: WorkMailIdentifier
    GranteeId: WorkMailIdentifier
    OrganizationId_1: OrganizationId = Field(..., alias='OrganizationId')
    PermissionValues_1: PermissionValues = Field(..., alias='PermissionValues')


class PutRetentionPolicyRequest(BaseModel):
    Description: Optional[PolicyDescription] = None
    FolderConfigurations_1: FolderConfigurations = Field(
        ..., alias='FolderConfigurations'
    )
    Id: Optional[ShortString] = None
    Name: ShortString
    OrganizationId_1: OrganizationId = Field(..., alias='OrganizationId')


class RedactedEwsAvailabilityProvider(BaseModel):
    EwsEndpoint: Optional[Url] = None
    EwsUsername: Optional[ExternalUserName] = None


class RegisterMailDomainRequest(BaseModel):
    ClientToken: Optional[IdempotencyClientToken] = None
    DomainName: WorkMailDomainName
    OrganizationId_1: OrganizationId = Field(..., alias='OrganizationId')


class RegisterToWorkMailRequest(BaseModel):
    Email: EmailAddress
    EntityId: WorkMailIdentifier
    OrganizationId_1: OrganizationId = Field(..., alias='OrganizationId')


class ResetPasswordRequest(BaseModel):
    OrganizationId_1: OrganizationId = Field(..., alias='OrganizationId')
    Password_1: Password = Field(..., alias='Password')
    UserId: WorkMailIdentifier


class Resource(BaseModel):
    DisabledDate: Optional[Timestamp] = None
    Email: Optional[EmailAddress] = None
    EnabledDate: Optional[Timestamp] = None
    Id: Optional[WorkMailIdentifier] = None
    Name: Optional[ResourceName] = None
    State: Optional[EntityState] = None
    Type: Optional[ResourceType] = None


class ResourceDelegates(RootModel[List[Delegate]]):
    root: List[Delegate]


class Resources(RootModel[List[Resource]]):
    root: List[Resource]


class StartMailboxExportJobRequest(BaseModel):
    ClientToken: IdempotencyClientToken
    Description_1: Optional[Description] = Field(None, alias='Description')
    EntityId: WorkMailIdentifier
    KmsKeyArn_1: KmsKeyArn = Field(..., alias='KmsKeyArn')
    OrganizationId_1: OrganizationId = Field(..., alias='OrganizationId')
    RoleArn_1: RoleArn = Field(..., alias='RoleArn')
    S3BucketName_1: S3BucketName = Field(..., alias='S3BucketName')
    S3Prefix: S3ObjectKey


class Tag(BaseModel):
    Key: TagKey
    Value: TagValue


class TagList(RootModel[List[Tag]]):
    root: List[Tag] = Field(..., max_length=50, min_length=0)


class TagResourceRequest(BaseModel):
    ResourceARN: AmazonResourceName
    Tags: TagList


class TestAvailabilityConfigurationRequest(BaseModel):
    DomainName_1: Optional[DomainName] = Field(None, alias='DomainName')
    EwsProvider: Optional[EwsAvailabilityProvider] = None
    LambdaProvider: Optional[LambdaAvailabilityProvider] = None
    OrganizationId_1: OrganizationId = Field(..., alias='OrganizationId')


class UpdateAvailabilityConfigurationRequest(BaseModel):
    DomainName_1: DomainName = Field(..., alias='DomainName')
    EwsProvider: Optional[EwsAvailabilityProvider] = None
    LambdaProvider: Optional[LambdaAvailabilityProvider] = None
    OrganizationId_1: OrganizationId = Field(..., alias='OrganizationId')


class UpdateDefaultMailDomainRequest(BaseModel):
    DomainName: WorkMailDomainName
    OrganizationId_1: OrganizationId = Field(..., alias='OrganizationId')


class UpdateImpersonationRoleRequest(BaseModel):
    Description: Optional[ImpersonationRoleDescription] = None
    ImpersonationRoleId_1: ImpersonationRoleId = Field(..., alias='ImpersonationRoleId')
    Name: ImpersonationRoleName
    OrganizationId_1: OrganizationId = Field(..., alias='OrganizationId')
    Rules: ImpersonationRuleList
    Type: ImpersonationRoleType


class UpdateMailboxQuotaRequest(BaseModel):
    MailboxQuota_1: MailboxQuota = Field(..., alias='MailboxQuota')
    OrganizationId_1: OrganizationId = Field(..., alias='OrganizationId')
    UserId: WorkMailIdentifier


class UpdatePrimaryEmailAddressRequest(BaseModel):
    Email: EmailAddress
    EntityId: WorkMailIdentifier
    OrganizationId_1: OrganizationId = Field(..., alias='OrganizationId')


class UpdateResourceRequest(BaseModel):
    BookingOptions_1: Optional[BookingOptions] = Field(None, alias='BookingOptions')
    Name: Optional[ResourceName] = None
    OrganizationId_1: OrganizationId = Field(..., alias='OrganizationId')
    ResourceId_1: ResourceId = Field(..., alias='ResourceId')


class User(BaseModel):
    DisabledDate: Optional[Timestamp] = None
    DisplayName: Optional[String] = None
    Email: Optional[EmailAddress] = None
    EnabledDate: Optional[Timestamp] = None
    Id: Optional[WorkMailIdentifier] = None
    Name: Optional[UserName] = None
    State: Optional[EntityState] = None
    UserRole_1: Optional[UserRole] = Field(None, alias='UserRole')


class UserIdList(RootModel[List[WorkMailIdentifier]]):
    root: List[WorkMailIdentifier] = Field(..., max_length=10, min_length=0)


class Users(RootModel[List[User]]):
    root: List[User]


class AccessControlRule(BaseModel):
    Actions: Optional[ActionsList] = None
    DateCreated: Optional[Timestamp] = None
    DateModified: Optional[Timestamp] = None
    Description: Optional[AccessControlRuleDescription] = None
    Effect: Optional[AccessControlRuleEffect] = None
    ImpersonationRoleIds: Optional[ImpersonationRoleIdList] = None
    IpRanges: Optional[IpRangeList] = None
    Name: Optional[AccessControlRuleName] = None
    NotActions: Optional[ActionsList] = None
    NotImpersonationRoleIds: Optional[ImpersonationRoleIdList] = None
    NotIpRanges: Optional[IpRangeList] = None
    NotUserIds: Optional[UserIdList] = None
    UserIds: Optional[UserIdList] = None


class AccessControlRulesList(RootModel[List[AccessControlRule]]):
    root: List[AccessControlRule] = Field(..., max_length=10, min_length=0)


class AvailabilityConfiguration(BaseModel):
    DateCreated: Optional[Timestamp] = None
    DateModified: Optional[Timestamp] = None
    DomainName_1: Optional[DomainName] = Field(None, alias='DomainName')
    EwsProvider: Optional[RedactedEwsAvailabilityProvider] = None
    LambdaProvider: Optional[LambdaAvailabilityProvider] = None
    ProviderType: Optional[AvailabilityProviderType] = None


class AvailabilityConfigurationList(RootModel[List[AvailabilityConfiguration]]):
    root: List[AvailabilityConfiguration]


class CreateAvailabilityConfigurationRequest(BaseModel):
    ClientToken: Optional[IdempotencyClientToken] = None
    DomainName_1: DomainName = Field(..., alias='DomainName')
    EwsProvider: Optional[EwsAvailabilityProvider] = None
    LambdaProvider: Optional[LambdaAvailabilityProvider] = None
    OrganizationId_1: OrganizationId = Field(..., alias='OrganizationId')


class CreateImpersonationRoleRequest(BaseModel):
    ClientToken: Optional[IdempotencyClientToken] = None
    Description: Optional[ImpersonationRoleDescription] = None
    Name: ImpersonationRoleName
    OrganizationId_1: OrganizationId = Field(..., alias='OrganizationId')
    Rules: ImpersonationRuleList
    Type: ImpersonationRoleType


class CreateOrganizationRequest(BaseModel):
    Alias: OrganizationName
    ClientToken: Optional[IdempotencyClientToken] = None
    DirectoryId_1: Optional[DirectoryId] = Field(None, alias='DirectoryId')
    Domains_1: Optional[Domains] = Field(None, alias='Domains')
    EnableInteroperability: Optional[Boolean] = None
    KmsKeyArn_1: Optional[KmsKeyArn] = Field(None, alias='KmsKeyArn')


class GetImpersonationRoleEffectResponse(BaseModel):
    Effect: Optional[AccessEffect] = None
    MatchedRules: Optional[ImpersonationMatchedRuleList] = None
    Type: Optional[ImpersonationRoleType] = None


class GetImpersonationRoleResponse(BaseModel):
    DateCreated: Optional[Timestamp] = None
    DateModified: Optional[Timestamp] = None
    Description: Optional[ImpersonationRoleDescription] = None
    ImpersonationRoleId_1: Optional[ImpersonationRoleId] = Field(
        None, alias='ImpersonationRoleId'
    )
    Name: Optional[ImpersonationRoleName] = None
    Rules: Optional[ImpersonationRuleList] = None
    Type: Optional[ImpersonationRoleType] = None


class GetMobileDeviceAccessEffectResponse(BaseModel):
    Effect: Optional[MobileDeviceAccessRuleEffect] = None
    MatchedRules: Optional[MobileDeviceAccessMatchedRuleList] = None


class Jobs(RootModel[List[MailboxExportJob]]):
    root: List[MailboxExportJob]


class ListAccessControlRulesResponse(BaseModel):
    Rules: Optional[AccessControlRulesList] = None


class ListAvailabilityConfigurationsResponse(BaseModel):
    AvailabilityConfigurations: Optional[AvailabilityConfigurationList] = None
    NextToken_1: Optional[NextToken] = Field(None, alias='NextToken')


class ListGroupMembersResponse(BaseModel):
    Members_1: Optional[Members] = Field(None, alias='Members')
    NextToken_1: Optional[NextToken] = Field(None, alias='NextToken')


class ListMailboxExportJobsResponse(BaseModel):
    Jobs_1: Optional[Jobs] = Field(None, alias='Jobs')
    NextToken_1: Optional[NextToken] = Field(None, alias='NextToken')


class ListMailboxPermissionsResponse(BaseModel):
    NextToken_1: Optional[NextToken] = Field(None, alias='NextToken')
    Permissions_1: Optional[Permissions] = Field(None, alias='Permissions')


class ListMobileDeviceAccessOverridesResponse(BaseModel):
    NextToken_1: Optional[NextToken] = Field(None, alias='NextToken')
    Overrides: Optional[MobileDeviceAccessOverridesList] = None


class ListMobileDeviceAccessRulesResponse(BaseModel):
    Rules: Optional[MobileDeviceAccessRulesList] = None


class ListResourceDelegatesResponse(BaseModel):
    Delegates: Optional[ResourceDelegates] = None
    NextToken_1: Optional[NextToken] = Field(None, alias='NextToken')


class ListResourcesResponse(BaseModel):
    NextToken_1: Optional[NextToken] = Field(None, alias='NextToken')
    Resources_1: Optional[Resources] = Field(None, alias='Resources')


class ListTagsForResourceResponse(BaseModel):
    Tags: Optional[TagList] = None


class ListUsersResponse(BaseModel):
    NextToken_1: Optional[NextToken] = Field(None, alias='NextToken')
    Users_1: Optional[Users] = Field(None, alias='Users')


class OrganizationSummaries(RootModel[List[OrganizationSummary]]):
    root: List[OrganizationSummary]


class PutAccessControlRuleRequest(BaseModel):
    Actions: Optional[ActionsList] = None
    Description: AccessControlRuleDescription
    Effect: AccessControlRuleEffect
    ImpersonationRoleIds: Optional[ImpersonationRoleIdList] = None
    IpRanges: Optional[IpRangeList] = None
    Name: AccessControlRuleName
    NotActions: Optional[ActionsList] = None
    NotImpersonationRoleIds: Optional[ImpersonationRoleIdList] = None
    NotIpRanges: Optional[IpRangeList] = None
    NotUserIds: Optional[UserIdList] = None
    OrganizationId_1: OrganizationId = Field(..., alias='OrganizationId')
    UserIds: Optional[UserIdList] = None


class ListOrganizationsResponse(BaseModel):
    NextToken_1: Optional[NextToken] = Field(None, alias='NextToken')
    OrganizationSummaries_1: Optional[OrganizationSummaries] = Field(
        None, alias='OrganizationSummaries'
    )
